@model Site.Models.ItemViewModel

@using Database.Model

@{
    ViewBag.Title = "Index";
}


<h2>Inventory</h2>

<a type="button" href="~/Create/Index" class="btn btn-primary">Create New</a>

<a type="button" href="~/Inventory/History" class="btn btn-primary">History</a>

</p>


@*<form asp-controller="Inventory" asp-action="Index" method="get">
    <p>



        <input type="submit" value="Filter" />
    </p>
</form>*@
<p>
    Component: <select asp-for="ComponentCategory" name="ComponentCategory" id="myCategory" onchange="filterTable()">
        <option value="ALL">All</option>
        <option value="CASE">Case</option>
        <option value="CPU">CPU</option>
        <option value="CPUCooler">CPUCooler</option>
        <option value="GPU">GPU</option>
        <option value="Motherboard">Motherboard</option>
        <option value="PSU">PSU</option>
        <option value="RAM">RAM</option>
    </select>

    Search: <input type="text" id="myInput" onkeyup="filterTable()" name="SearchString">
</p>

<table class="table" id="tableContent">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Items[0].Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Items[0].Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Items[0].Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Items[0].Component)
        </th>
        <th></th>
    </tr>
    
    @foreach (var item in Model.Items)
    {
        <tr id="mainTR" >
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                £@Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Component)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }
    
</table>
    <div id="myList"></div>



@section Scripts
{
    <script type="text/javascript">
        function filterTable()
        {
            // Declare variables 
            var input, category, filterInput, filterCategory, table, tr, td, i, txtValue;
            input = document.getElementById("myInput");
            category = document.getElementById("myCategory")
            filterInput = input.value.toUpperCase();
            filterCategory = category.value.toUpperCase();
            table = document.getElementById("tableContent");
            tr = table.getElementsByTagName("tr");
            // Loop through all table rows, and hide those who don't match the search query 
            for (i = 0; i < tr.length; i++)
            {
                td = tr[i].getElementsByTagName("td")[0];
                td2 = tr[i].getElementsByTagName("td")[3];
                
                // Check search query
                if (td)
                {
                  txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filterInput) > -1) 
                  {
                    tr[i].style.display = "";
                  }
                  else
                  {
                    tr[i].style.display = "none";
                  }
                }

                // Check component query
                if (td2 && tr[i].style.display != "none")
                {

                    txtValue = td2.textContent || td2.innerText;
                    txtValue = txtValue.trim();

                    if (filterCategory == "ALL")
                    {
                        tr[i].style.display = "";
                    }
                    else if (txtValue.toUpperCase() == filterCategory)
                    {
                        tr[i].style.display = "";
                    }
                    else
                    {
                        tr[i].style.display = "none";
                    }
                }


          }
        }
    </script>

}