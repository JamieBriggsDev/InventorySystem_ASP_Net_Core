@model Site.Models.CreateViewModel

@{
    ViewBag.Title = "Motherboard";
}

<h2>Motherboard - @Model.Item.Name</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Motherboard.Socket, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Motherboard.Socket, new { htmlAttributes = new { @class = "form-control", id = "socket", onkeyup = "CheckFields()" } })
                @Html.ValidationMessageFor(model => model.Motherboard.Socket, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Motherboard.FormFactor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Motherboard.FormFactor, new { htmlAttributes = new { @class = "form-control", id = "formfactor", onkeyup = "CheckFields()" } })
                @Html.ValidationMessageFor(model => model.Motherboard.FormFactor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Motherboard.RamSlots, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Motherboard.RamSlots, new { htmlAttributes = new { @class = "form-control", id = "ramslots", onkeyup = "CheckFields()" } })
                @Html.ValidationMessageFor(model => model.Motherboard.RamSlots, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Motherboard.MaxRam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Motherboard.MaxRam, new { htmlAttributes = new { @class = "form-control", id = "maxram", onkeyup = "CheckFields()" } })
                @Html.ValidationMessageFor(model => model.Motherboard.MaxRam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <a type="button" class="btn btn-secondary btn-lg btn-block" id="continue">Missing Information</a>
            <a type="button" href="~/Inventory/Index" class="btn btn-secondary btn-lg btn-block">Cancel</a>
        </div>
    </div>
}

@section Scripts
{
    <script type="text/javascript">
        function CheckFields() {
            // Declare variables
            var socket, formfactor, ramslots, maxram, button;
            // Get variables
            socket = document.getElementById("socket");
            formfactor = document.getElementById("formfactor");
            ramslots = document.getElementById("ramslots");
            maxram = document.getElementById("maxram");
            button = document.getElementById("continue");

            if (socket.value.length > 0 &&
                formfactor.value.length > 0 &&
                ramslots.value.length > 0 &&
                maxram.value.length > 0) {
                button.className = "btn btn-primary btn-lg btn-block";
                button.href = "javascript:document.forms[0].submit()";
                button.textContent = "Continue"
            }
            else
            {
                button.className = "btn btn-secondary btn-lg btn-block";
                button.textContent = "Missing Information"
                button.removeAttribute("href");
            }

        }
    </script>

}