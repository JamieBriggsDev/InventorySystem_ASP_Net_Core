@model Site.Models.CreateViewModel

@{
    ViewBag.Title = "RAM";
}

<h2>RAM - @Model.Item.Name</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.RAM.Speed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RAM.Speed, new { htmlAttributes = new { @class = "form-control", id = "speed", onkeyup = "CheckFields()" } })
                @Html.ValidationMessageFor(model => model.RAM.Speed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RAM.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RAM.Type, new { htmlAttributes = new { @class = "form-control", id = "type", onkeyup = "CheckFields()" } })
                @Html.ValidationMessageFor(model => model.RAM.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RAM.CAS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RAM.CAS, new { htmlAttributes = new { @class = "form-control", id = "cas", onkeyup = "CheckFields()" } })
                @Html.ValidationMessageFor(model => model.RAM.CAS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RAM.Modules, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RAM.Modules, new { htmlAttributes = new { @class = "form-control", id = "modules", onkeyup = "CheckFields()" } })
                @Html.ValidationMessageFor(model => model.RAM.Modules, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RAM.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RAM.Size, new { htmlAttributes = new { @class = "form-control", id = "size", onkeyup = "CheckFields()" } })
                @Html.ValidationMessageFor(model => model.RAM.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <a type="button" class="btn btn-secondary btn-lg btn-block" id="continue">Missing Information</a>
            <a type="button" href="~/Inventory/Index" class="btn btn-secondary btn-lg btn-block">Cancel</a>
        </div>
    </div>
}

@section Scripts
{
    <script type="text/javascript">
        function CheckFields() {
            // Declare variables
            var speed, type, cas, modules, button;
            // Get variables
            speed = document.getElementById("speed");
            type = document.getElementById("type");
            cas = document.getElementById("cas");
            modules = document.getElementById("modules");
            size = document.getElementById("size");
            button = document.getElementById("continue");

            if (speed.value.length > 0 &&
                type.value.length > 0 &&
                cas.value.length > 0 &&
                modules.value.length > 0 &&
                size.value.length > 0) {
                button.className = "btn btn-primary btn-lg btn-block";
                button.href = "javascript:document.forms[0].submit()";
                button.textContent = "Continue"
            }
            else
            {
                button.className = "btn btn-secondary btn-lg btn-block";
                button.textContent = "Missing Information"
                button.removeAttribute("href");
            }

        }
    </script>

}