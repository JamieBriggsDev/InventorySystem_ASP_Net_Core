@model Database.Model.Item

@{
    ViewBag.Title = "Create";
}



    <h2>Create New Item</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", @id = "name", onkeyup = "CheckFields()" } })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.Price, new { htmlAttributes = new { @class = "form-control", id = "price", onkeyup = "CheckFields()", onfocusout = "FixPrice()" } })
                    @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.Quantity, new { htmlAttributes = new { @class = "form-control", id = "quantity", onkeyup = "CheckFields()" } })
                    @Html.ValidationMessageFor(m => m.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Component, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(m => m.Component, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Component, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <a type="button" class="btn btn-secondary btn-lg btn-block" id="continue">Missing Information</a>
                <a type="button" href="~/Inventory/Index" class="btn btn-secondary btn-lg btn-block">Cancel</a>
            </div>

        </div>
    }



@section Scripts
{
    <script type="text/javascript">
        function CheckFields() {
            // Declare variables
            var name, price, quantity, button;
            // Get variables
            name = document.getElementById("name");
            price = document.getElementById("price");
            quantity = document.getElementById("quantity");
            button = document.getElementById("continue");

            if (name.value.length > 0 &&
                price.value.length > 0 &&
                quantity.value.length > 0) {
                button.className = "btn btn-primary btn-lg btn-block";
                button.href = "javascript:document.forms[0].submit()";
                button.textContent = "Continue"
            }
            else {
                button.className = "btn btn-secondary btn-lg btn-block";
                button.textContent = "Missing Information"
                button.removeAttribute("href");
            }

        }
    </script>

    <script type="text/javascript">
        String.prototype.cleanup = function () {
            return this.toLowerCase().replace(/[^0-9.]+/g, "");
        }
        function FixPrice() {
            // Declare variables
            var price, text;

            price = document.getElementById("price");
            text = price.value.cleanup();

            // Format text
            if (text == "") {
                text = "0.00";
            } else {
                var words = text.split('.');
                if (words[1] == null || words[1] == "") {
                    
                    text = words[0] + ".00";
                }
                else if (words[1].length == 1) {
                    text = words[0] + "." + words[1] + "0";
                }
                else {
                    text = words[0] + "." + words[1];
                    text = Number(text).toFixed(2);
                }
            }

            // remove zeros from front of pounds
            text = text.replace("^0+", "");

            if (text.substr(0, 1) == ".") {
                text = "0" + text;
            }
            // check if there is pounds digit


            price.value = text;

        }
    </script>

}
